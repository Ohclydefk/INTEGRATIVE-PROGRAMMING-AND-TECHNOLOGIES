@model Appointment

<div class="content">
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <h4 class="page-title">Edit Appointment</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <form method="post" asp-action="UpdateAppointment">
                @Html.HiddenFor(model => model.AppointmentId)
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Appointment ID</label>
                            <input class="form-control" type="text" value="@Model.AppointmentId" readonly>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="FullName">Patient Name</label>
                            <input asp-for="FullName" class="form-control" type="text" value="@Model.FullName" readonly>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Department</label>
                            <select asp-for="AssignedDept" id="department" class="form-control form-select" required>
                                <option value="">Select Department</option>
                                <option value="@Model.AssignedDept" selected>@Model.AssignedDept</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Doctor</label>
                            <select asp-for="AssignedDoctor" id="doctor" class="form-control form-select" required>
                                <option value="">Select Doctor</option>
                                <option value="@Model.AssignedDoctor" selected>@Model.AssignedDoctor</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Date</label>
                            <div class="cal-icon">
                                <input asp-for="AppointmentDate" type="text" class="form-control datetimepicker" id="date" value="@Model.AppointmentDate.ToString("yyyy-MM-ddTHH:mm")">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Patient Phone Number</label>
                            <input asp-for="PhoneNumber" class="form-control" type="text" value="@Model.PhoneNumber" readonly>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Patient Email</label>
                            <input asp-for="Email" class="form-control" type="email" value="@Model.Email" readonly>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="display-block">Appointment Status</label>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="status" id="product_active" value="Active" @(Model.Status == "Active" ? "checked=\"checked\"" : "")>
                        <label class="form-check-label" for="product_active">
                            Active
                        </label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="status" id="product_inactive" value="Inactive" @(Model.Status == "Inactive" ? "checked=\"checked\"" : "")>
                        <label class="form-check-label" for="product_inactive">
                            Inactive
                        </label>
                    </div>
                </div>

                <div class="m-t-20 text-center">
                    <button class="btn btn-primary submit-btn">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Include Flatpickr CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.css" integrity="sha512-MQXduO8IQnJVq1qmySpN87QQkiR1bZHtorbJBD0tzy7/0U9+YIC93QWHeGTEoojMVHWWNkoCp8V6OzVSYrX0oQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.js" integrity="sha512-K/oyQtMXpxI4+K0W7H25UopjM8pzq0yrVdFdG21Fh5dBe91I40pDd9A4lzNlHPHBIP2cwZuoxaUSX0GJSObvGA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Initialize flatpickr
        flatpickr("#date", {
            enableTime: true,
            dateFormat: "Y-m-d H:i",
            defaultDate: "@Model.AppointmentDate.ToString("yyyy-MM-ddTHH:mm")"
        });

        // Fetch departments on page load
        fetch("/Admin/GetDepartments")
            .then(response => response.json())
            .then(data => {
                let departmentSelect = document.getElementById("department");
                data.forEach(department => {
                    let option = document.createElement("option");
                    option.value = department;
                    option.textContent = department;
                    if (department === "@Model.AssignedDept") {
                        option.selected = true;
                    }
                    departmentSelect.appendChild(option);
                });
            });

        // Fetch doctors when a department is selected
        document.getElementById("department").addEventListener("change", function () {
            let department = this.value;
            let doctorSelect = document.getElementById("doctor");
            doctorSelect.innerHTML = '<option value="">Select Doctor</option>';

            if (department) {
                fetch(`/Admin/GetDoctors?department=${department}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(doctor => {
                            let option = document.createElement("option");
                            option.value = `${doctor.firstName} ${doctor.lastName}`;
                            option.textContent = `${doctor.firstName} ${doctor.lastName}`;
                            if (option.value === "@Model.AssignedDoctor") {
                                option.selected = true;
                            }
                            doctorSelect.appendChild(option);
                        });
                    });
            }
        });

        // Trigger change event on page load to populate doctors based on initial department
        document.getElementById("department").dispatchEvent(new Event('change'));
    });
</script>
